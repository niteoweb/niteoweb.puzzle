### This gets included in the main nginx.conf file on the server

upstream zope_instances {
    server 127.0.0.1:${ports:zope1};
    server 127.0.0.1:${ports:zope2};
}

# Plone
server {
    listen 80;
    server_name niteoweb.com www.niteoweb.com niteoweb.si www.niteoweb.si;

    ## Redirect from non-www to www
    if ($host !~ "^www\.") {
        rewrite  ^/(.*)$  http://www.$host/$1;
    }

    ## Redirect from .si to .com
    if ($host ~ "^www\.niteoweb\.si") {
        rewrite  ^/(.*)$  http://www.niteoweb.com/$1;
    }

    location / {

        if ($request_uri ~* ^.+\.(ico|css|js|gif|jpg|png)$) {
            expires 1d;
        }

        proxy_pass http://zope_instances/VirtualHostBase/http/www.niteoweb.com/Plone/VirtualHostRoot/;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

## Proxy to "edit.niteoweb.com" which has Diazo theme disabled
# Redirect to HTTPS
server {
    listen      80;
    server_name edit.niteoweb.com;

    rewrite     ^  https://$server_name$request_uri? permanent;
}

# Serve Plone through SSL and only for our internal IPs
server {
    listen ${ips:server}:443 ssl;
    server_name edit.niteoweb.com;
    keepalive_timeout    70;

    # allow access from server and office IPs
    allow   ${ips:server};
    allow   ${ips:office_tp};
    allow   ${ips:office_dravlje};

    # drop rest of the world
    deny    all;

    # allow bigger files to be uploaded
    client_max_body_size 10m;

    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  10m;
    ssl_certificate     /etc/nginx/certs/STAR.niteoweb.com.crt;
    ssl_certificate_key /etc/nginx/certs/STAR.niteoweb.com.key;

    location / {
        proxy_pass http://127.0.0.1:${ports:zope1}/VirtualHostBase/https/edit.niteoweb.com/Plone/VirtualHostRoot/;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
