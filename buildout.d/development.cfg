[buildout]
extends = base.cfg

parts +=
    omelette
    sphinxbuilder
    test
    instance
    fabfile
    nginx-conf

eggs +=
    niteoweb.puzzle [develop,test]


# =========================
# Develop external packages
# =========================
extensions += mr.developer
sources = sources
auto-checkout =

[sources]
plone.api = git https://github.com/plone/plone.api.git
niteoweb.fabfile = git git@github.com:niteoweb/niteoweb.fabfile.git
RelStorage = svn http://svn.zope.org/repos/main/relstorage/trunk/


# ===============================================
# Mirrors python namespaces into one handy folder
# ===============================================
[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


# ======================================
# Prepare Sphinx documentation generator
# ======================================
[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs
interpreter = ${buildout:directory}/bin/zopepy


# ==========================================
# Prepare test-runner for running unit tests
# ==========================================
[test]
recipe = zc.recipe.testrunner
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']
eggs = ${buildout:eggs}


# ==================================
# Create a development Zope instance
# ==================================
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
debug-mode = off
verbose-security = on
environment-vars = zope_i18n_compile_mo_files = true
eggs = ${buildout:eggs}
rel-storage =
    type mysql
    db zodb
    user zodbuser
    passwd geslo123


# =======================
# Prepare Fabric commands
# =======================
[fabfile]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/fabfile.py.in
output = ${buildout:directory}/fabfile.py


# ================================
# Generate config files from ./etc
# ================================
[nginx-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/nginx.conf.in
output = ${buildout:directory}/etc/nginx.conf

